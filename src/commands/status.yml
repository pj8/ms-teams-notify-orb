description: >
  Send a status alert at the end of a job based on success or failure. Must be the last step in a job.
parameters:
  fail_only:
    type: boolean
    default: false
    description: "if `true`, notifications successful jobs will not be sent"
  failure_message:
    type: string
    default: "ðŸ”´ A $CIRCLE_JOB job has failed!"
    description: "Message to send in notification"
  success_message:
    type: string
    default: "ðŸŽ‰ A $CIRCLE_JOB job has succeeded!"
    description: "Message to send in notification"
  only_for_branches:
    type: string
    default: ""
    description: "If set, a comma-separated list of branches for which to send notifications. No spaces."
  webhook:
    type: string
    default: ${MS_TEAMS_WEBHOOK}
    description: "Enter either your Webhook URL or the CircleCI UI to add your Webhook URL under the 'MS_TEAMS_WEBHOOK' environment variable"
steps:
  - run:
      command: |
        echo 'export BUILD_STATUS="fail"' >> $BASH_ENV
      name: Setting Failure Condition
      when: on_fail
  - run:
      command: |
        echo 'export BUILD_STATUS="success"' >> $BASH_ENV
      name: Setting Success Condition
      when: on_success
  - run:
      name: Provide error if non-bash shell
      command: |
        if [ ! -x /bin/bash ]; then
          echo Bash not installed.
          exit 1
        fi
  - run:
      name: Prepare Message Template
      when: always
      command: |
        # Note that the "\<<" in the heredoc declaration is escaped from

        # CircleCI's parameters syntax.

        SUCCESS_MSG="<< parameters.success_message >>"
        FAILURE_MSG="<< parameters.failure_message >>"

        MS_TEAMS_SUCCESS_MSG=$(cat \<<END_HEREDOC

        {
          "@type": "MessageCard",
          "@context": "http://schema.org/extensions",
          "themeColor": "1CBF43",
          "summary": "CircleCI Build Notification",
          "sections": [
            {
              "activityTitle": "$SUCCESS_MSG",
              "facts": [
                {
                  "name": "Project",
                  "value": "$CIRCLE_PROJECT_REPONAME"
                },
                {
                  "name": "Job Number",
                  "value": "$CIRCLE_BUILD_NUM"
                }
              ],
              "markdown": true
            }
          ],
          "potentialAction": [
            {
              "@type": "OpenUri",
              "name": "Visit Job",
              "targets": [
                {
                  "os": "default",
                  "uri": "$CIRCLE_BUILD_URL"
                }
              ]
            }
          ]
        }

        END_HEREDOC

        )
        echo "$MS_TEAMS_SUCCESS_MSG" > /tmp/ms_teams_success_message

        MS_TEAMS_FAIL_MSG=$(cat \<<END_HEREDOC

        {
          "@type": "MessageCard",
          "@context": "http://schema.org/extensions",
          "themeColor": "ed5c5c",
          "summary": "CircleCI Build Notification",
          "sections": [
            {
              "activityTitle": "$FAILURE_MSG",
              "facts": [
                {
                  "name": "Project",
                  "value": "$CIRCLE_PROJECT_REPONAME"
                },
                {
                  "name": "Job Number",
                  "value": "$CIRCLE_BUILD_NUM"
                }
              ],
              "markdown": true
            }
          ],
          "potentialAction": [
            {
              "@type": "OpenUri",
              "name": "Visit Job",
              "targets": [
                {
                  "os": "default",
                  "uri": "$CIRCLE_BUILD_URL"
                }
              ]
            }
          ]
        }

        END_HEREDOC

        )
        echo "$MS_TEAMS_FAIL_MSG" > /tmp/ms_teams_fail_message
  - run:
      name: Send Message
      when: always
      command: |
        CURRENT_BRANCH_IN_FILTER=false

        IFS="," read -ra BRANCH_FILTERS \<<< "<< parameters.only_for_branches>>"

        for i in "${BRANCH_FILTERS[@]}"; do
          if [ "${i}" = "${CIRCLE_BRANCH}" ]; then
            CURRENT_BRANCH_IN_FILTER=true
          fi
        done

        SUCCESS_MSG_PATH=/tmp/ms_teams_success_message
        FAIL_MSG_PATH=/tmp/ms_teams_fail_message

        if [ "x" == "x<< parameters.only_for_branches >>" ] || [ "${CURRENT_BRANCH_IN_FILTER}" = true ]; then
          if [ -z "<< parameters.webhook >>" ]; then
            echo "NO MS TEAMS WEBHOOK SET"
            echo "Please input your MS_TEAMS_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            # If successful
            if [ "$BUILD_STATUS" = "success" ]; then
              # Skip if fail_only
              if [ "<< parameters.fail_only >>" = "true" ]; then
                echo "The job completed successfully"
                echo '"fail_only" is set to true. No notification will be sent.'
              else
                curl -X POST -H 'Content-type: application/json' \
                  --data-binary @${SUCCESS_MSG_PATH} \
                  << parameters.webhook >>
                echo "Job completed successfully. Alert sent."
              fi
            else
              # If failed
              curl -X POST -H 'Content-type: application/json' \
                --data-binary @${FAIL_MSG_PATH} \
                << parameters.webhook >>
              echo "Job failed. Alert sent."
            fi
          fi
        else
          echo "Current branch is not in the branch filter. Not sending notification."
        fi
